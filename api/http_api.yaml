openapi: "3.0.0"
info:
  version: 1.0.0
  title: tobro_http_server
paths:
  /ping:
    get:
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pong'
  /connect:
    post:
      requestBody:
        description: Connect to a serial port
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectRequest'
      responses:
        '200':
          description: Connect post response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectResponse'
        '400':
          description: Connect post error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /boards:
    get:
      responses:
        '200':
          description: Board get response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardsResponse'
        '400':
          description: Board get error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /circuit:
    get:
      responses:
        '200':
          description: Circuit get response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CircuitResponse'
        '400':
          description: Circuit get error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      requestBody:
        description: Create a circuit
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCircuitRequest'
      responses:
        '200':
          description: Create circuit post response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CircuitResponse'
        '400':
          description: Create circuit post error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /save_circuit:
    post:
      requestBody:
        description: Save a circuit
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveCircuitRequest'
      responses:
        '200':
          description: Save circuit post response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CircuitResponse'
        '400':
          description: Save circuit post error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /setup_pin:
    post:
      requestBody:
        description: Setup a pin
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetupPinRequest'
      responses:
        '200':
          description: Setup pin post response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetupPinResponse'
        '400':
          description: Setup pin post error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /digital_write_pin:
    post:
      requestBody:
        description: Write to a pin
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DigitalWritePinRequest'
      responses:
        '200':
          description: Write pin post response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalWritePinResponse'
        '400':
          description: Write pin post error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /analog_write_pin:
    post:
      requestBody:
        description: Write to a pin
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalogWritePinRequest'
      responses:
        '200':
          description: Write pin post response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalogWritePinResponse'
        '400':
          description: Write pin post error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    # base types
    Pong:
      type: object
      required:
        - ping
      properties:
        ping:
          type: string
          example: pong
    ErrorResponse:
      type: object
      required:
        - success
      properties:
        message:
          type: string
    ConnectRequest:
      type: object
      required:
        - port
      properties:
        port:
          type: string
          example: "/dev/ttyUSB0"
    ConnectResponse:
      type: object
      properties:
        port:
          type: string
          example: "/dev/ttyUSB0"
        timestamp:
          type: integer
          example: 1612345678
    CreateCircuitRequest:
      type: object
      required:
        - name
        - board
      properties:
        name:
          type: string
          example: "my_circuit"
        board:
          type: string
          example: "arduino_nano"
    CreateCircuitResponse:
      type: object
      properties:
        name:
          type: string
          example: "my_circuit"
        board:
          type: string
          example: "arduino_nano"
        timestamp:
          type: integer
          example: 1612345678
    SaveCircuitRequest:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          example: 1234
    SetupPinRequest:
      type: object
      required:
        - pinNumber
        - mode
      properties:
        pinNumber:
          type: integer
          example: 1
        mode:
          type: string
          enum:
            - "input"
            - "output"
    SetupPinResponse:
      type: object
      required:
        - pinNumber
        - mode
      properties:
        pinNumber:
          type: integer
          example: 1
        mode:
          type: string
    DigitalWritePinRequest:
      type: object
      required:
        - pin
        - value
      properties:
        pinNumber:
          type: integer
          example: 1
        value:
          type: integer
          minimum: 0
          maximum: 1
    DigitalWritePinResponse:
      type: object
      properties:
        pinNumber:
          type: integer
          example: 1
        value:
          type: integer
          minimum: 0
          maximum: 1
    AnalogWritePinRequest:
      type: object
      required:
        - pinNumber
        - value
      properties:
        pinNumber:
          type: integer
          example: 1
        value:
          type: integer
          minimum: 0
          maximum: 255
    AnalogWritePinResponse:
      type: object
      properties:
        pinNumber:
          type: integer
          example: 1
        value:
          type: integer
          minimum: 0
          maximum: 255
    PinResponse:
      type: object
      required:
        - pinNumber
        - type
        - mode
        - min
        - max
        - digitalRead
        - digitalWrite
        - analogRead
        - analogWrite
      properties:
        pinNumber:
          type: integer
        type:
          type: string
          example: "digital"
        mode:
          type: integer
          minimum: 0
          maximum: 1
        min:
          type: integer
        max:
          type: integer
          minimum: 0
          maximum: 255
        digitalRead:
          type: boolean
        digitalWrite:
          type: boolean
        analogRead:
          type: boolean
        analogWrite:
          type: boolean
    CircuitResponse:
      type: object
      required:
        - id
        - name
        - board
        - pins
      properties:
        id:
          type: integer
          example: 1234
        name:
          type: string
          example: "my_circuit"
        board:
          type: string
          example: "arduino_nano"
        pins:
          type: array
          items:
            $ref: '#/components/schemas/PinResponse'  
    BoardsResponse:
      type: object
      required:
        - boards
      properties:
        boards:
          type: array
          items:
            type: string
          example: ["arduino_nano"]