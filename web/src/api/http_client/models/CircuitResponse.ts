/* tslint:disable */
/* eslint-disable */
/**
 * tobro_http_server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PinResponse } from './PinResponse';
import {
    PinResponseFromJSON,
    PinResponseFromJSONTyped,
    PinResponseToJSON,
} from './PinResponse';

/**
 * 
 * @export
 * @interface CircuitResponse
 */
export interface CircuitResponse {
    /**
     * 
     * @type {number}
     * @memberof CircuitResponse
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof CircuitResponse
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CircuitResponse
     */
    board: string;
    /**
     * 
     * @type {Array<PinResponse>}
     * @memberof CircuitResponse
     */
    pins: Array<PinResponse>;
}

/**
 * Check if a given object implements the CircuitResponse interface.
 */
export function instanceOfCircuitResponse(value: object): value is CircuitResponse {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('board' in value) || value['board'] === undefined) return false;
    if (!('pins' in value) || value['pins'] === undefined) return false;
    return true;
}

export function CircuitResponseFromJSON(json: any): CircuitResponse {
    return CircuitResponseFromJSONTyped(json, false);
}

export function CircuitResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CircuitResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'board': json['board'],
        'pins': ((json['pins'] as Array<any>).map(PinResponseFromJSON)),
    };
}

export function CircuitResponseToJSON(value?: CircuitResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'board': value['board'],
        'pins': ((value['pins'] as Array<any>).map(PinResponseToJSON)),
    };
}

